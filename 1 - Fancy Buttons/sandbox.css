/* ========================================

    CODE YOUR STYLES BELOW!

   ====================================== 
   
   
   */


/* ========================================

    Facebook Button

   ====================================== 
    NOTES
   -----
   
   * rem references the root foot size instead of the parent

   box-shadow: none|h-offset v-offset blur spread color |inset|initial|inherit;
   text-shadow: h-shadow v-shadow blur-radius color|none|initial|inherit;
  
   */

.facebook-style-btn {
    border-radius: n 2px;
    font-size: 0.9rem;
    padding: 6px 12px;
}

.facebook-style-dark {
    box-shadow: inset 1px 0 0 #4d73bf;
    background: #4267b2;
    border: solid 1px #4267b2;
    color: white;
    text-shadow: 0 1px 0 #3359a5;
}

.facebook-style-dark:hover {
    background: #2b54a7;
}

.facebook-style-dark:active {
    background: #1d4698;
    border-color: #1d4698;
}

.facebook-style-light {
    background: #f6f7f9;
    border: solid 1px #ced0d4;
    color: #4b4f56;
}

.facebook-style-light:hover {
    background: #e9ebee;
}

.facebook-style-light:active {
    background: #d8dade;
    border-color: #d8dade;
}


/* ========================================

    3D Button 1

   ====================================== 
   
   NOTES
   -----

hsl(hue, saturation, lightness);
Hue is a degree on the color wheel from 0 to 360. 0 is red, 120 is green, and 240 is blue.

Saturation is a percentage value, 0% means a shade of gray, and 100% is the full color.

Lightness is also a percentage, 0% is black, 50% is neither light or dark, 100% is white

3D effects are interaction, interface, and position hacks. 😄. Manipulation of positions, shadows, paddings, margins, 
and color at its finest. I also love the usage of ::after and ::before on tags.
*/

.btn-3d-1 {
    position: relative;
    background: orangered;
    border: none;
    color: white;
    padding: 15px 24px;
    font-size: 1.4rem;
    box-shadow: -6px 6px 0 hsl(16, 100%, 30%);
    outline: none;
}

.btn-3d-1:hover {
    background: hsl(16, 100%, 30%);
}

.btn-3d-1:active {
    background: hsl(16, 100%, 40%);
    top: 3px;
    left: -3px;
    box-shadow: -3px 3px 0 hsl(16, 100%, 30%);
}

.btn-3d-1::before {
    position: absolute;
    display: block;
    content: "";
    height: 0;
    width: 0;
    border: solid 6px transparent;
    border-right: solid 6px hsl(16, 100%, 30%);
    border-left-width: 0;
    top: 0;
    left: -6px;
}

.btn-3d-1:active::before {
    border: solid 3px transparent;
    border-right: solid 3px hsl(16, 100%, 30%);
    border-left-width: 0;
    top: 0;
    left: -3px;
}

.btn-3d-1::after {
    position: absolute;
    display: block;
    content: "";
    height: 0;
    width: 0;
    border: solid 6px transparent;
    border-left: solid 6px hsl(16, 100%, 30%);
    border-top-width: 0;
    bottom: -6px;
    right: -6px;
}

.btn-3d-1:active::after {
    border: solid 3px transparent;
    border-left: solid 3px hsl(16, 100%, 30%);
    border-top-width: 0;
    bottom: -3px;
    right: -3px;
}


/* ========================================

    3D Button 2

   ====================================== 
   

 
   NOTES
   -----
    radial-gradient() function sets a radial gradient as the background image.

    A radial gradient is defined by its center.

    To create a radial gradient you must define at least two color stops.

    radial-gradient(shape size at position, start-color, ..., last-color);
   */

.btn-3d-2 {
    position: relative;
    background: #ecd300;
    background: -webkit-radial-gradient(hsl(54, 100%, 50%), hsl(54, 100%, 40%));
    background: -o-radial-gradient(hsl(54, 100%, 50%), hsl(54, 100%, 40%));
    background: -moz-radial-gradient(hsl(54, 100%, 50%), hsl(54, 100%, 40%));
    background: radial-gradient(hsl(54, 100%, 50%), hsl(54, 100%, 40%));
    font-size: 1.4rem;
    text-shadow: 0 -1px 0 #c3af07;
    color: white;
    border: solid 1px hsl(54, 100%, 20%);
    border-radius: 100%;
    height: 120px;
    width: 120px;
    z-index: 4;
    outline: none;
    box-shadow: inset 0 1px 0 hsl(54, 100%, 50%), 0 2px 0 hsl(54, 100%, 20%), 0 3px 0 hsl(54, 100%, 18%), 0 4px 0 hsl(54, 100%, 16%), 0 5px 0 hsl(54, 100%, 14%), 0 6px 0 hsl(54, 100%, 12%), 0 7px 0 hsl(54, 100%, 10%), 0 8px 0 hsl(54, 100%, 8%), 0 9px 0 hsl(54, 100%, 6%), 0 10px 0 hsl(54, 100%, 4%);
}

.btn-3d-2:hover {
    background: #ecd300;
    background: -webkit-radial-gradient(hsl(54, 100%, 45%), hsl(54, 100%, 35%));
    background: -o-radial-gradient(hsl(54, 100%, 45%), hsl(54, 100%, 35%));
    background: -moz-radial-gradient(hsl(54, 100%, 45%), hsl(54, 100%, 35%));
    background: radial-gradient(hsl(54, 100%, 45%), hsl(54, 100%, 35%));
}

.btn-3d-2:active {
    background: #ecd300;
    background: -webkit-radial-gradient(hsl(54, 100%, 43%), hsl(54, 100%, 33%));
    background: -o-radial-gradient(hsl(54, 100%, 43%), hsl(54, 100%, 33%));
    background: -moz-radial-gradient(hsl(54, 100%, 43%), hsl(54, 100%, 33%));
    background: radial-gradient(hsl(54, 100%, 43%), hsl(54, 100%, 33%));
    top: 2px;
    box-shadow: inset 0 1px 0 hsl(54, 100%, 50%), 0 2px 0 hsl(54, 100%, 20%), 0 3px 0 hsl(54, 100%, 18%), 0 4px 0 hsl(54, 100%, 16%), 0 5px 0 hsl(54, 100%, 14%), 0 6px 0 hsl(54, 100%, 12%), 0 7px 0 hsl(54, 100%, 10%), 0 8px 0 hsl(54, 100%, 8%);
}


/* ========================================

    Gradient Bordered Buttons

   ====================================== 
   

 
   NOTES
   -----
   I don't know why I'd want to do this but it's cool. 😁.
    
   */

.gradient-button-1 {
    position: relative;
    z-index: 1;
    display: inline-block;
    padding: 20px 40px;
    font-size: 1.4rem;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    background-color: #e7eef1;
    border: 10px solid transparent;
    border-image: linear-gradient(to top right, orangered, yellow);
    border-image-slice: 1;
    color: orangered;
    outline: none;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease;
}

.gradient-button-1:hover {
    background-image: linear-gradient(to top right, orangered, yellow);
    color: white;
}

.gradient-button-2 {
    position: relative;
    z-index: 1;
    display: inline-block;
    padding: 20px 40px;
    font-size: 1.4rem;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    background-color: #e7eef1;
    border: 4px solid transparent;
    border-image: linear-gradient(to right, orangered, transparent);
    border-image-slice: 1;
    color: orangered;
    outline: none;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease;
}

.gradient-button-2:hover {
    background-image: linear-gradient(to right, orangered, yellow);
    color: white;
    border-right-style: none;
}


/* ========================================

    Animated Buttons 

   ====================================== 
   

 
   NOTES
   -----
   Transitions and animation frames can make the difference.
    
   */

.animated-button-1 {
    position: relative;
    display: inline-block;
    padding: 20px 40px;
    font-size: 1.4rem;
    background-color: #00b3b4;
    background-image: url(pattern.png);
    background-size: 40px 40px;
    border: solid 1px #555;
    color: white;
    transition: all ease 3s;
}

.animated-button-1:hover {
    animation: loading-button-animation 2s linear infinite;
}

@keyframes loading-button-animation {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 40px 0;
    }
}

.animated-button-2 {
    position: relative;
    display: inline-block;
    padding: 20px 40px;
    font-size: 1.4rem;
    background-color: #00b3b4;
    background-image: url(pattern.png);
    background-size: 40px 40px;
    border: solid 1px #555;
    color: white;
    transition: all ease 0.3s;
}

.animated-button-2::after {
    position: absolute;
    top: 30%;
    right: 0.6rem;
    content: ">";
    opacity: 0;
    transition: all ease 0.3s
}

.animated-button-2:hover {
    padding: 20px 60px 20px 20px;
}

.animated-button-2:hover::after {
    right: 1.2rem;
    opacity: 1;
}


/* ========================================

    Toggle Swtich UI Buttons 

   ====================================== 
   
    
   NOTES
   -----
   Compared to display: inline, the major difference is that display: inline-block allows to set a width and height on the element.
   The default display property of a span is "inline".  Also, with display: inline-block, the top and bottom margins/paddings are respected, but with display: inline they are not.

   The technique here is that the lable covering the input and span does not have a width and expands to contain the styles applied to the span. Since the lable has a "for" attribute, 
   a click on the span is a click on the lable, which in turn targets the id refence on its "for" attribute. In this case, a checkbox.
   */

.toggle-1 {
    /* this is the label covering the input and the span */
    font-family: Arial, Helvetica, sans-serif;
    display: inline-block;
    vertical-align: top;
    margin: 0 15px 0 0;
}

.toggle-1__input {
    /* input */
    display: none;
}

.toggle-1__button {
    /* span */
    position: relative;
    display: inline-block;
    font-size: 1rem;
    line-height: 20px;
    text-transform: uppercase;
    background-color: #f2395a;
    border: solid 1px #f2395a;
    color: white;
    width: 80px;
    height: 30px;
    transition: all 0.3s ease;
    cursor: pointer;
}

.toggle-1__button::before {
    position: absolute;
    top: 5px;
    left: 40px;
    content: "off";
    display: inline-block;
    height: 20px;
    padding: 0 3px;
    background: white;
    color: #f2395a;
    transition: all 0.3s ease;
}

.toggle-1__input:checked+.toggle-1__button {
    background-color: #00b3b4;
    border: solid 1px #00b3b4;
}

.toggle-1__input:checked+.toggle-1__button::before {
    left: 5px;
    content: "on";
    color: #00b3b4;
}

.toggle-2 {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 0.8rem;
    display: inline-block;
    vertical-align: top;
    margin: 0 15px 0 0;
}

.toggle-2__input {
    /* input */
    display: none;
}

.toggle-2__button {
    position: relative;
    display: inline-block;
    font-size: 1rem;
    line-height: 20px;
    text-transform: uppercase;
    background-color: white;
    color: #aaa;
    border: solid 1px #ccc;
    padding: 5px 10px 5px 30px;
    transition: all 0.3s ease;
    cursor: pointer;
}

.toggle-2__button::before {
    position: absolute;
    top: 10px;
    left: 10px;
    display: inline-block;
    height: 10px;
    width: 10px;
    content: "";
    background: #ccc;
    transition: all 0.3s ease;
    border-radius: 100%;
}

.toggle-2__input:checked+.toggle-2__button {
    background: #00b3b4;
    border-color: #00b3b4;
    color: white;
}

.toggle-2__input:checked+.toggle-2__button::before {
    background: white;
}